Local Location: Blue/Desktop/CSS FLEX>style_story


Before we get onto anything else, you need to clone the CSS github repo.

So start by going to github/CSS and paste/add new files so everything is updated. 
ALL DONE

CLONEING A GITHUB REPO:
Now that github files are updated, we can move to cloning it to our local laptop.

I am using chatgpt to help me  Title:Clone GitHub repo locally.

Command: git clone https://github.com/moriss/CSS
The URL was taken from clicking   '<>code'   on the github menu then pasting the url into the command line as above.

The official name of the locally cloned directory is simply CSS.  You deleted the old version you were using previously that contained the exact same files. 





STOPPED HERE

ADD, COMMIT AND PUSH
You should now be in a position to push all updated files to github. So try this now.
The chatgpt title is  'Change Filename'

Please note, you need a personal access token to link your local repository to github via the terminal window.

Getting the personal access token: (Please note you can use an existing pat unless it has expired).
github/your profile picture/settings/developer-settings/ personal access token/tokens-classic/generate new token. Complete all the boxes for now then select "generate token" The token will show at top of page and is copyable. You can never see the token again on github so you need to save it somewhere else or generate a new one each time. 

Her is the token:
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

Navigate to your local repo.
git add .    This stages ALL files. To stage specific files, add them one by one by filename.

git commit -m "You comment here"    This commits(updates) from local to github


Now you need to link your local repo to github (if not already done so)


git remote add origin https://github.com/moriss/CSS.git

If it says this: fatal: remote origin already exists. Then it doesn't need to be linked.



The push command is 

git push -u origin <name of branch>

To find out what branch you want to push it to use the following comand locally

git branch

In my case on  * main came up so you would use this for now

git push -u origin main


Where you are prompted for username and password, use your personal access token instead of your password.


This is my generated token. It was done via github/profile picture/settings/developer setting/personal access token/generate token.
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
I think I set it to expire in 30 days.


News about password authentication that subsequently requires a PAT.
###
remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
###

END OF ADD, COMMIT AND PUSH




For below, create a new file in github css for any new stuff you come across. Items can get deleted when considered no longer new.
This can also be used for error notes.


Journey notes note:
Before we get into below, I came across a historical issue where a container will not cover its children when they are floated or perhaps positioned in a certain way. Ie taken out of the natrual flow. The way to deal with this is by clearing the floats before the end of the container div.
</div class  ="container">
container's children are here!
<div class="clear"></div> The css would be .clear{clear:both;}
</div> end of container div



WORKING ON THE BBC WEBSITE
::before  WITHOUT FLEXBOX
In copying the bbc site I was working on the following section:

  "Post office scandal ----------------see all"   
  
  The line lies centraly between the text and covers the entire page. I tried doing it without flexbox and this is where I got to:
I needed to set the children to display:inline;(NOT the container)  so the two children displayed inline. 

I then needed to set the ::before psuedo element to content:""; which defaults to a space, display:inline-block, to allow a height to be applied to the space. (display:block doesn't work as it puts the line above the text as its own block element). I then set a width:300px; or whatever width you would like and a height of 1px and a background to black to make it visible.

The problems that remain are: 
having the line horizontally central to the text and 
automatically spanned across the whole page but stopping before  "see all" 

And this is WITH FLEXBOX
.container2 {display:flex; }  /**title and see all are set to display flex**/
    .see_all  {display:flex; align-items:center; flex:1 1 auto; }  /**see all and ::before are set to display flex**/
    .see_all::before {content: ""; flex-grow:1; height:1px; background:black; margin:0 10px 0 10px;}  /**flex grow is required to have it span across the page as it specifically targets the psuedo element, the height gives the psuedo empty space a height and the background makes it black. The result is a 1pixel line that stretches all the way across the page but **/





10th January 2024
If you set a float-right property in a text div then add a width rule of 10% etc, the text seems to fall to the next line when you drag the screen size smaller. Ommiting the width property seems to keep the text on the same line. 

Clearing floats:
footer {clear:both}
This stops ie float left where you want it to stop. 

display:inline-block >Compared to display:inline, this allows you to set a width and height on the element.

New

.container {
display: flex;
...
gap: 10px;
gap: 10px 20px; /* row-gap column gap */
row-gap: 10px;
column-gap: 20px;
}
